#include<iostream>
#include<vector>
using namespace std;

void display(vector<vector<int>> &board){
    for(int i=0;i<board.size();i++){
        for(int j=0;j<board[0].size();j++){
            cout<<board[i][j]<<" ";
        }
        cout<<endl;
    }
}

bool isValid(vector<vector<int>> &board,int i,int j,int val){
        
        //row check
        for(int col=0;col<board[0].size();col++){
            if(board[i][col]==val)
                return false;
        }
        //column check
        for(int row=0;row<board.size();row++){
            if(board[row][j]==val)
                return false;
        }
        //submatrix check
        int smi=i/3*3;
        int smj=j/3*3;
        for(int row=0;row<3;row++){
            for(int col=0;col<3;col++){
                if(board[smi+row][smj+col]==val)
                    return false;
            }
        }
        return true;
        
    }

void solve(vector<vector<int>> &board,int i,int j){
    if(i==board.size()){
        display(board);
            return;
        }
        int nextI=0,nextJ=0;
        if(j==board[0].size()-1)//i.e j last column me hai
        {
            nextI=i+1;
            nextJ=0;
        }
        else{
            nextI=i;
            nextJ=j+1;
        }
        if(board[i][j]>0)
            solve(board,nextI,nextJ);//move to next cell
        else{
            for(int po=1;po<=9;po++){
                if(isValid(board,i,j,po)==true){
                    board[i][j]=po;
                    solve(board,nextI,nextJ);//board pe val daal ke ,move to next cell 
                    board[i][j]=0;//backtrack
                }
            }
        }
        
    }
    


int main(){
    
    
    vector<vector<int>> board(9,vector<int>(9));
    
    for(int i=0;i<9;i++){
        for(int j=0;j<9;j++){
            cin>>board[i][j];
        }
    }
    solve(board,0,0);
    return 0;
}