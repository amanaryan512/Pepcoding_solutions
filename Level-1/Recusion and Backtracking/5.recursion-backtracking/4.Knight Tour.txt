#include<iostream>
#include<vector>
using namespace std;

void display(vector<vector<int>> &chess){
    int n=chess.size();
    for(int i=0;i<n;i++){
        for(int j=0;j<chess[0].size();j++){
            cout<<chess[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl;
}

void knightTour(vector<vector<int>> &chess,int row,int col,int move){
    
    if(row<0 || col <0 || row>=chess.size() ||col>=chess.size() || chess[row][col]!=0)
    return;
    
    //last cell me pahuch gae
    else if(move==(chess.size()*chess.size())){
        chess[row][col]=move;
        display(chess);
        chess[row][col]=0;
        return;
        
    }
    vector<pair<int,int>> possibleMoves={{-2,1},{-1,2},{1,2},{2,1},{2,-1},{1,-2},{-1,-2},{-2,-1}};
    
    for(int i=0;i<possibleMoves.size();i++){
        chess[row][col]=move;
        knightTour(chess,row+possibleMoves[i].first,col+possibleMoves[i].second,move+1);
        chess[row][col]=0;
    }
    
}

int main(){
    int n;
    cin>>n;
    int row,col;
    cin>>row>>col;
    vector<vector<int>> chess(n,vector<int> (n,0));
    knightTour(chess,row,col,1);
    return 0;
}