#include<bits/stdc++.h>
using namespace std;

int knapsack(vector<int> &val,vector<int> &wt,int capacity){
    int n=val.size();
    int dp[n+1][capacity+1];
    
    for(int i=0;i<n+1;i++)
    dp[i][0]=0;
    
    for(int i=0;i<capacity+1;i++)
    dp[0][i]=0;
    
    for(int i=1;i<n+1;i++){
        for(int j=1;j<capacity+1;j++){
            if(j>=wt[i-1])
            dp[i][j]=max(dp[i-1][j],val[i-1]+dp[i-1][j-wt[i-1]]);
            else
            dp[i][j]=dp[i-1][j];
        }
    }
    return dp[n][capacity];
    
}

int main(){
    int n;
    cin>>n;
    vector<int> val(n);
    vector<int> wt(n);
    for(int i=0;i<n;i++){
        cin>>val[i];
    }
    for(int i=0;i<n;i++){
        cin>>wt[i];
    }
    int capacity;//capacity of knapsack
    cin>>capacity;
    cout<<knapsack(val,wt,capacity);
    
    return 0;
}