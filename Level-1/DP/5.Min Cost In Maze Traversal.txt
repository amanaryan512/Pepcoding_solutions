#include<bits/stdc++.h>
using namespace std;

    int minPathSum(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        int dp[n][m];
        for(int i=n-1;i>=0;i--){
            for(int j=m-1;j>=0;j--){
                if(i==n-1 && j==m-1)//i.e last row and col me
                    dp[i][j]=grid[i][j];
                else if(i==n-1)//last row me
                    dp[i][j]=grid[i][j]+dp[i][j+1];
                else if(j==m-1)//last col me
                    dp[i][j]=grid[i][j]+dp[i+1][j];
                else
                    dp[i][j]=grid[i][j]+min(dp[i][j+1],dp[i+1][j]);
            }
        }
        return dp[0][0];
    }
int main(){
    int row;
    cin>>row;
    int col;
    cin>>col;
    vector<vector<int>> maze(row,vector<int>(col));
    
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
            cin>>maze[i][j];
        }
    }
    cout<<minPathSum(maze);
    
    return 0;
}